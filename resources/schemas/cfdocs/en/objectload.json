{
	"name":"objectLoad",
	"type":"function",
	"syntax":"objectLoad(binaryObject)\nobjectLoad(filepath)",
	"returns":"any",
	"related":["objectSave"],
	"description":"Load object from binary object",
	"params": [
		{"name":"binaryObject","description":"A binary object returned by objectSave function.","required":true,"default":"","type":"binary","values":[]},
		{"name":"filepath","description":"A file path to a serialized object","required":true,"default":"","type":"string","values":[]}
	],
	"engines": {
		"coldfusion": {"minimum_version":"9", "notes":"", "docs":"https://helpx.adobe.com/coldfusion/cfml-reference/coldfusion-functions/functions-m-r/objectload.html"},
		"lucee": {"minimum_version":"", "notes":"", "docs":"https://docs.lucee.org/reference/functions/objectload.html"},
		"railo": {"minimum_version":"", "notes":"", "docs":"http://railodocs.org/index.cfm/function/objectload"}
	},
	"links": [
		{
			"title":"objectSave() and objectLoad() for Complex Data Storage, Transport, and Manipulation",
			"url":"https://blog.mattclemente.com/2021/10/01/til-cfml-objectsave-objectload/",
			"description":"A blog post explaining and demonstrating how to use objectSave() and objectLoad()"
		}
	],
	"examples": [
		{
			"title": "Saving and loading a complex object",
			"description": "",
			"code": "people = queryNew('id,name','integer,varchar', {'id':1,'name':'Pedro'});\nbinary_people = objectSave(people);\nwriteDump(binary_people);\nrestored_people = objectLoad(binary_people);\nwriteDump(restored_people);",
			"runnable":true
		}
	]


}
