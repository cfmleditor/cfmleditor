{
	"$schema": "http://json-schema.org/draft-07/schema#",
	"definitions": {
		"engineDetail": {
			"title": "Engine Detail",
			"type": "object",
			"properties": {
				"minimum_version": {
					"title": "Minimum version",
					"description": "The version of the engine in which this was introduced",
					"type": "string",
					"pattern": "^((0|[1-9]\\d*)(\\.(0|[1-9]\\d*)(\\.(0|[1-9]\\d*))?)?)?$"
				},
				"deprecated": {
					"title": "Deprecated version",
					"description": "The version of the engine in which this was deprecated",
					"type": "string",
					"pattern": "^((0|[1-9]\\d*)(\\.(0|[1-9]\\d*)(\\.(0|[1-9]\\d*))?)?)?$",
					"default": ""
				},
				"removed": {
					"title": "Removed version",
					"description": "The version of the engine in which this was removed",
					"type": "string",
					"pattern": "^((0|[1-9]\\d*)(\\.(0|[1-9]\\d*)(\\.(0|[1-9]\\d*))?)?)?$",
					"default": ""
				},
				"notes": {
					"title": "Notes",
					"description": "Additional notes about engine compatibility",
					"type": "string",
					"default": ""
				},
				"docs": {
					"title": "Docs",
					"description": "Link to engine-specific documentation",
					"type": "string",
					"default": ""
				}
			},
			"required": ["minimum_version"]
		},
		"engines": {
			"title": "Engines",
			"type": "object",
			"properties": {
				"coldfusion": {
					"title": "ColdFusion",
					"description": "Engine details for ColdFusion",
					"type": "object",
					"$ref": "#/definitions/engineDetail"
				},
				"railo": {
					"title": "Railo",
					"description": "Engine details for Railo",
					"type": "object",
					"$ref": "#/definitions/engineDetail"
				},
				"lucee": {
					"title": "Lucee",
					"description": "Engine details for Lucee",
					"type": "object",
					"$ref": "#/definitions/engineDetail"
				},
				"openbd": {
					"title": "OpenBD",
					"description": "Engine details for OpenBD",
					"type": "object",
					"$ref": "#/definitions/engineDetail"
				}
			}
		},
        "examples": {
			"title": "Examples",
			"description": "A list of examples",
			"type": "array",
			"minItems": 0,
			"items": {
				"title": "Example",
				"description": "Information about the example",
				"type": "object",
				"properties": {
					"title": {
						"title": "Title",
						"description": "Name of the code example",
						"type": "string"
					},
					"description": {
						"title": "Description",
						"description": "Description of the code example",
						"type": "string"
					},
					"code": {
						"title": "Code",
						"description": "The example code",
						"type": "string"
					},
					"result": {
						"title": "Result",
						"description": "The expected output of the code example",
						"type": ["string", "boolean", "number"]
					},
					"runnable": {
						"title": "Runnable",
						"description": "Whether the code is runnable (in trycf for example)",
						"type": "boolean",
						"default": true
					},
					"testable": {
						"title": "Testable",
						"description": "If the example can be tested. May need to set to false if there is a bug on certain engines.",
						"type": "boolean",
						"default": true
					}
				},
				"required": ["title", "description", "code"]
			},
			"default": []
		},
		"params": {
			"title": "Parameters",
			"description": "List of parameters",
			"type": "array",
			"minItems": 0,
			"items": {
				"title": "Parameter",
				"description": "Argument or attribute",
				"type": "object",
				"properties": {
					"name": {
						"title": "Name",
						"description": "Parameter name",
						"type": "string"
					},
					"description": {
						"title": "Description",
						"description": "Description of the parameter",
						"type": "string"
					},
					"type": {
						"title": "Type",
						"description": "The data type of the parameter",
						"type": "string",
						"enum": [
							"any",
							"array",
							"binary",
							"boolean",
							"component",
							"date",
							"function",
							"guid",
							"numeric",
							"query",
							"string",
							"struct",
							"uuid",
							"variableName",
							"xml"
						]
					},
					"required": {
						"title": "Required",
						"description": "Whether this parameter is required",
						"type": "boolean"
					},
					"default": {
						"title": "Default",
						"description": "The default value of the parameter when not provided",
						"type": ["string", "boolean", "number"],
						"default": ""
					},
					"values": {
						"title": "Values",
						"description": "List of enumerated values for the parameter",
						"type": "array",
						"minItems": 0,
						"items": {
							"title": "Value",
							"description": "One of the enumerated values for the parameter",
							"type": ["string", "boolean", "number"]
						},
						"default": []
					},
					"engines": {
						"title": "Engines",
						"description": "Engine compatibility information",
						"type": "object",
						"$ref": "#/definitions/engines"
					},
					"callback_params": {
						"title": "Callback Parameters",
						"description": "When type is function, this represents the parameters for the callback",
						"type": "array",
						"$ref": "#/definitions/params",
						"minItems": 0,
						"default": []
					}
				},
				"required": ["name", "description", "type", "required"]
			},
			"default": []
		},
        "functionDetail": {
            "title": "Function Detail",
            "description": "Details about headless or member functions",
            "type": "object",
            "properties": {
                "name": {
                    "title": "Name",
                    "description": "The name of the function. Start with lowercase.",
                    "type": "string",
                    "pattern": "^[a-z]\\w+$"
                },
                "type": {
                    "title": "Type",
                    "description": "The data type for which this function this applies.",
                    "type": "string",
                    "enum": [
                        "array",
                        "boolean",
                        "date",
                        "image",
                        "locale",
                        "query",
                        "string",
                        "struct",
                        "spreadsheet",
                        "xml"
                    ]
                },
                "returns": {
                    "title": "Return Type",
                    "description": "The return type of the function.",
                    "type": "string",
                    "enum": [
                        "any",
                        "array",
                        "binary",
                        "boolean",
                        "date",
                        "function",
                        "guid",
                        "numeric",
                        "query",
                        "string",
                        "struct",
                        "uuid",
                        "variableName",
                        "void",
                        "xml"
                    ],
                    "default": "void"
                },
                "syntax": {
                    "title": "Syntax",
                    "description": "The basic syntax of the function",
                    "type": "string",
                    "default": ""
                },
                "examples": {
                    "title": "Examples",
                    "description": "Examples for the function",
                    "type": "array",
                    "$ref": "#/definitions/examples",
                    "minItems": 0,
                    "default": []
                },
                "engines": {
                    "title": "Engines",
                    "description": "Engine compatibility information",
                    "type": "object",
                    "$ref": "#/definitions/engines"
                },
                "base_param_index": {
                    "title": "Base Param Index",
                    "description": "A 1-based index referencing the param on which the member function is based. Ignore if not a member function.",
                    "type": "number",
                    "default": 1
                }
            },
            "required": ["name", "type", "returns"]
        },
        "details": {
			"title": "Details",
            "description": "Details about listing, tag, headless function, or member function.",
			"type": "object",
			"properties": {
                "tag": {
                    "title": "Tag",
                    "description": "Details about the tag",
                    "type": "object",
                    "properties": {
                        "syntax": {
                            "title": "Syntax",
                            "description": "The basic syntax of the tag or function",
                            "type": "string",
                            "default": ""
                        },
                        "script": {
                            "title": "Script",
                            "description": "For tags, shows how the tag would be invoked from cfscript.",
                            "type": "string",
                            "default": ""
                        }
                    }
                },
				"headless": {
					"title": "Headless",
					"description": "Details about the headless version of the function",
					"type": "object",
					"$ref": "#/definitions/functionDetail"
				},
				"member": {
					"title": "Member",
					"description": "Details about the member version of the function",
					"type": "object",
					"$ref": "#/definitions/functionDetail"
				},
                "component": {
                    "title": "Component",
					"description": "Details about the component",
					"type": "object",
					"$ref": "#/definitions/functionDetail"
                },
                "other": {
                    "title": "Other",
					"description": "Other details that may not be captured in this schema.",
					"type": "object",
					"properties": {
                        "notes": {
                            "title": "Notes",
                            "description": "Placeholder for future properties that may be added to document listings",
                            "type": "string",
                            "default": ""
                        }
                    }
                }
			}
		}
	},
	"title": "CFDocs",
	"description": "CFDocs data file",
	"type": "object",
	"properties": {
		"name": {
			"title": "Name",
			"description": "The name of the tag, function, component, or listing. Except for listings and Application.cfc, should start with lowercase letter.",
			"type": "string",
			"pattern": "^([a-zA-Z0-9 \\./_-]+)$"
		},
		"type": {
			"title": "Type",
			"description": "Whether this refers to a tag, function, component, or listing",
			"type": "string",
			"enum": ["function", "tag", "listing", "component"]
		},
		"description": {
			"title": "Description",
			"description": "A short description of the item",
			"type": "string"
		},
        "related": {
			"title": "Related",
			"description": "A list of tag or function names that are related to this item",
			"type": "array",
			"minItems": 0,
			"items": {
				"title": "Entity name",
				"description": "The name of a function or tag that is already documented",
				"type": "string"
			},
			"default": []
		},
		"params": {
			"title": "Parameters",
			"description": "List of parameters",
			"type": "array",
			"$ref": "#/definitions/params",
			"minItems": 0,
			"default": []
		},
        "details": {
            "title": "Details",
            "description": "Additional details about the tag, function, component, or listing",
            "type": "object",
            "$ref": "#/definitions/details"
        },
		"engines": {
			"title": "Engines",
			"description": "Engine compatibility information",
			"type": "object",
			"$ref": "#/definitions/engines"
		},
		"discouraged": {
			"title": "Discouraged",
			"description": "If this key exists and has content a warning is displayed stating that the tag or function is discouraged by the CFML community.",
			"type": "string",
			"default": ""
		},
		"links": {
			"title": "Links",
			"description": "A list of external references",
			"type": "array",
			"minItems": 0,
			"items": {
				"title": "Link",
				"description": "Information about the reference",
				"type": "object",
				"properties": {
					"title": {
						"title": "Title",
						"description": "A title for the link",
						"type": "string"
					},
					"description": {
						"title": "Description",
						"description": "A description for the link",
						"type": "string"
					},
					"url": {
						"title": "URL",
						"description": "The link URL",
						"type": "string"
					}
				},
				"required": ["title", "description", "url"]
			},
			"default": []
		},

		"member": {
			"title": "Member",
			"description": "Deprecated - use details.member instead. For functions, shows the available member function syntax.",
			"type": "string",
			"default": ""
		}

	},
	"required": ["name", "description", "type"]
}
